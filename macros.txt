##Default **sequences** folder path
SET(SEQUENCES_PATH ${CMAKE_SOURCE_DIR}/sequences/)

## Url and md5 hash value for the vot2013 dataset
SET(vot2013  http://www.site.uottawa.ca/research/viva/datasets/tracking/vot2013.tar.gz)
SET(md5_vot2013  7467447b0d533efcb458ab106c66497a)

## Url and md5 hash value for the vot2014 dataset
SET(vot2014  http://www.site.uottawa.ca/research/viva/datasets/tracking/vot2014.tar.gz)
SET(md5_vot2014  3161df3bfc62802d5f5a66a5d4af82b6)

## Url and md5 hash value for the vot2015 dataset
SET(vot2015  http://www.site.uottawa.ca/research/viva/datasets/tracking/vot2015.tar.gz)
SET(md5_vot2015  2e8c33eed5dc08d8e4892fd9e4c1c2ed)

## Url and md5 hash value for the vot2015tir dataset
SET(vot2015tir  http://www.site.uottawa.ca/research/viva/datasets/tracking/vot2015tir.tar.gz)
SET(md5_vot2015tir  367c1f685d4a28a448f6c4bc2fcb3552)

## List of datasets available
SET(_DATASETS_ vot2013 vot2014 vot2015 vot2015tir)

## Create an option for each dataset
FOREACH(dataset ${_DATASETS_})
	STRING(TOUPPER "DOWNLOAD_${dataset}" opt)
	OPTION(${opt} "Download video sequences from ${dataset} dataset" OFF)
	LIST(APPEND DATASETS ${${dataset}}) 
ENDFOREACH()

MACRO(SUBDIRLIST result curdir)
  FILE(GLOB children RELATIVE ${curdir} ${curdir}/*)
  SET(dirlist "")
  FOREACH(child ${children})
    IF(IS_DIRECTORY ${curdir}/${child})
        LIST(APPEND dirlist ${child})
    ENDIF()
  ENDFOREACH()
  SET(${result} ${dirlist})
ENDMACRO()

MACRO(UNZIP file dest)
	FILE(MAKE_DIRECTORY ${dest})
	execute_process(
     COMMAND ${CMAKE_COMMAND} -E tar xzf ${file} 
     WORKING_DIRECTORY ${dest}
    )
ENDMACRO()

MACRO(CHECK_DATASET url)
	GET_FILENAME_COMPONENT(name ${url} NAME_WE)
	GET_FILENAME_COMPONENT(filename ${url} NAME)
	STRING(TOUPPER "DOWNLOAD_${name}" opt)
	IF(${opt})
	
		SET (DATASET "${SEQUENCES_PATH}${filename}")
		SET (DATASET_FOLDER ${SEQUENCES_PATH}${name}/)
		SET (DATASET_MD5 ${md5_${name}})
		
		FILE(MAKE_DIRECTORY ${DATASET_FOLDER})
		IF ( NOT EXISTS  ${DATASET})
			 MESSAGE(STATUS "    downloading dataset: ${DATASET}")
		 	 FILE(DOWNLOAD ${url} ${DATASET} SHOW_PROGRESS EXPECTED_HASH MD5=${DATASET_MD5})
		ENDIF()
		IF ( EXISTS ${DATASET} AND NOT EXISTS  "${DATASET_FOLDER}list.txt")
			MESSAGE(STATUS "    unziping dataset: ${DATASET}")
			UNZIP(${DATASET} ${SEQUENCES_PATH})
		ENDIF()
	ENDIF()
ENDMACRO()

MACRO(CHECK_DATASETS)
	FOREACH(url ${DATASETS})
		CHECK_DATASET(${url})
	ENDFOREACH()
	FILE(TO_NATIVE_PATH ${SEQUENCES_PATH} SEQUENCES_PATH)
	FILE(WRITE ${CMAKE_SOURCE_DIR}/sequences.txt "${SEQUENCES_PATH}" )
ENDMACRO()


SUBDIRLIST(TRACKERS "${CMAKE_SOURCE_DIR}/trackers")
FOREACH(tracker ${TRACKERS})
	STRING(TOUPPER "WITH_${tracker}" opt)
	OPTION(${opt} "Tracker enabled" OFF)
	MESSAGE(STATUS "    found tracker: ${tracker}")
	LIST(APPEND _TRACKERS_ ${tracker})
ENDFOREACH()


MACRO(CHECK_TRACKERS)
	FOREACH(tracker ${_TRACKERS_})
	STRING(TOUPPER "WITH_${tracker}" opt)
	IF(${opt})
			SUBDIRS("trackers/${tracker}")
			INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/trackers/${tracker})
			TARGET_LINK_LIBRARIES( ${PROJECT_NAME} ${tracker})
			MESSAGE(STATUS "    tracker included: ${tracker}")
	ENDIF()
	ENDFOREACH()
ENDMACRO()


CONFIGURE_FILE(precomp.h.in precomp.h @ONLY)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})